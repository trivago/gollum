.. Autogenerated by Gollum RST generator (docs/generator/*.go)

Statsd
======

This producer sends increment events to a statsd server.



Parameters
----------

**BatchMaxMessages**
defines the maximum number of messages to send per
batch. By default this is set to 500.


**BatchTimeoutSec**
defines the number of seconds after which a batch is
flushed automatically. By default this is set to 10.


**Prefix**
defines the prefix for stats metric names. By default this
is set to "gollum.".


**Server**
defines the server and port to send statsd metrics to. By default
this is set to "localhost:8125".


**UseMessage**
defines whether to cast the message to string and increment
the metric by that value. If this is set to true and the message fails
to cast to an integer, then the message with be ignored. If this is set
to false then each message will increment by 1. By default this is set
to false.


**StreamMapping**
defines a translation from gollum stream to statsd metric
name. If no mapping is given the gollum stream name is used as the
metric name.


Parameters (from DirectProducer)
--------------------------------

**Enable**
switches the consumer on or off. By default this value is set to true.


**ID**
allows this producer to be found by other plugins by name. By default this
is set to "" which does not register this producer.


**ShutdownTimeoutMs**
sets a timeout in milliseconds that will be used to detect
a blocking producer during shutdown. By default this is set to 1 second.
Decreasing this value may lead to lost messages during shutdown. Increasing
this value will increase shutdown time.


**Streams**
contains either a single string or a list of strings defining the
message channels this producer will consume. By default this is set to "*"
which means "listen to all routers but the internal".


**FallbackStream**
defines the stream used for messages that are sent to the fallback after
a timeout (see ChannelTimeoutMs). By default this is _DROPPED_.


**Modulators**
sets formatter and filter to use. Each formatter has its own set of options
which can be set here, too. By default this is set to format.Forward.
Each producer decides if and when to use a Formatter.


Example
-------

.. code-block:: yaml

	 - "producer.Statsd":
	   BatchMaxMessages: 500
	   BatchTimeoutSec: 10
	   Prefix: "gollum."
	   Server: "localhost:8125"
	   UseMessage: false
	   StreamMapping:
	     "*" : "default"
	


